1、多道程序设计

让多个计算题 同时进入一个计算机系统的主存储器并行 执行，这种程序设计方	法称 多道程序设计，这样的计算机系统称 多道程序设计。

为什么采用多道程序设计：

充分发挥处理器的使用效率，提高单位时间内的算题量( 提高了吞吐量)。

例子：A和B两个作业，A执行结束 需60分钟，B执行完需 60分钟 ，

其中占用处理器的时间为 18分钟；

如果：采用单道执行，处理器的利用率 18/(60+60) *100%

如果让A和B并行执行，总共花72分钟：

处理器的利用率：18/72 *100%

2、进程有哪些基本状态？画出进程基本状态变化图。

进程在生命周期中，有三个基本状态，分别是：等待态、就绪态 和运行态。

等待态 - 等待某一事件；

就绪态 - 等待系统分配处理器 以便于运行；

运行态 - 正在占用处理器运行；

变化图如下：

进程的概念 = 把一个程序在一个数据集上的一次执行称进程。

进程的属性：动态的，包含：数据 和运行在数据集上的程序；

多个进程可含有相同程序；

多个进程可并发执行；

进程有三种基本状态；

进程特点：

动态性 - 执行过程中状态不断变化；

并发性 - 若干进程可同时执行，轮流占用处理器交替执行；

异步性 - 执行速度 取决于自身与外界 及进程调度策略，不可知向前	推进；

为什么要引入进程，意义何在？

1、提高资源的利用率；

2、正确描述程序的执行情况；

3、进程状态变化的事件有哪些，请举例。

每个进程在执行过程中的任一时刻当且仅处于基本状态之一。

运行态 - 等待态

一个运行中的进程 启动了外围设备，等待外围设备传输结束；

运行中的进程 申请资源等不到满足；(主存空间，外围设备)

运行中的进程 出现故障；(程序错，主存错)

等待态 - 就绪态

外围设备传输结束，使 等待者 结束等待；

资源得到满足；(别的进程归还了资源)

故障排除后结束等待；

运行态 - 就绪态

分配给进程占用处理器的时间用完而强迫进程让出处理器；

有更高优先级的进程

就绪态 - 运行态

从就绪进程中选中一个进程占用处理器；

4、进程控制块的概念

在计算机系统中，进程控制块 PCB 就是对进程进行管理和调度的信息集合。

进程控制块包含四类信息：

1、表示信息

( 包含：进程名)

2、说明信息

(包含：进程状态、等待原因、进程程序和数据存放位置)

3、现场信息

(包含：通用、控制寄存器内容 和 程序状态字寄存器内容)

4、管理信息

(进程优先数 和 队列指针)

创建一个进程，就要为这个程序 分

配 一个工作区 和 建立一个进程控制块。

操作系统依据进程控制块对进程进行 控制和管理。

用于控制进程的原语有：

1、创建原语

为程序分配工作区 和创建一个进程控制块，置就绪态。

2、撤销原语

收回工作区和进程控制块。

3、阻塞原语

运行中发生等待事件时，把进程状态改为等待态。

4、唤醒原语

把进程的状态改为就绪态。

5、什么是进程队列？

在多道程序设计系统中，往往会同时创建多个进程，被创建的若干就绪进程可	按一定次序排除队列，这个队列称 就绪队列。

为了便于控制和管理，进程的队列可以通过对进程控制块的链接来形成。

队首指针 指向队列 中 第一个进程的进程控制块的位置。

前一个进程控制块中的指针 指向它的下一个进程的进程控制块的位置。

图：

例如：当进程加入到某队列中时，若原队列为空，则只需把入队进程的进程控	制块地址填入队首指针中，该进程的队列指针填上0。

若非空，修改响应队列指针。

一个进程被创建后，就处于就绪队列中。

什么是出队？ 指 一个进程从所在的队列中退出。

什么是 入队？指 一个进程排入到一个指定的队列中。

6、什么是中断？什么是中断源？什么是中断处理程序？中断类型有哪些？

答：由于某些事件的出现，中止现行进程的执行，而转去处理出现的事件，等	适当的时候让被中止的进程继续运行的 过程 称中断。

引起中断的事件 称为 中断源 。

对出现的事件进程处理的程序 称 中断处理程序。

中断类型可分：

1、硬件故障中断；

2、程序中断；

3、外部中断；

4、输入/输出中断；

5、访管中断；

强迫性中断事件：1、硬件故障中断；2、程序中断；3、外部中断；

4、输入/输出中断；

由 硬件的中断装置发现的；

自愿性中断事件：5、访管中断；

trap INT 当处理器执行这类指令时 就产生 访管中断。

由处理器执行指令时 根据指令中的操作码捕俘到的。

7、什么是 中断响应？硬件发现中断事件后 应做哪些工作？中断处理？

答：发生中断时，由硬件的中断装置暂停现行进程的运行，而让操作系统的中	断处理程序占用处理器，这一过程 称 中断响应。

中断装置发现中断后，

首先：把出现的中断事件存放到程序状态字寄存器中的中断码位置。

然后：把程序状态字寄存器中的 当前PSW 作为旧 PSW 存放到预先约定好的主	存固定单元中保护起来。

其次：把已经确定好的操作系统处理程序的 新PSW 送到程序状态字寄存器，成	为 当前PSW。中断装置通过交换PSW使被中断进

程让

出处理器，且使处理器按	照中断处理程序的 新PSW控制执行。

最后：中断处理程序就占用了处理器，它先从保存好的 旧 PSW中取出中断码，	分析发生的具体事件，从而可完成对中断事件的处理。

中断处理的两步：1、保护好被中断进程的现场信息；

被中断进程的通用寄存器和控制寄存器内容及被	中断进程的旧PSW 保存。

2、根据旧PSW中指示的中断事件进程具体处理。

对各类中断事件的处理原则如下：

1、硬件故障中断的处理

必须人工干预，这类事件只能是输出一些故障信息。

2、程序中断事件的处理

与程序编制本身有关，转交给用户自行处理。

3、外部中断事件的处理

按压了某个中断键，时钟问题等。

4、输入输出中断事件的处理

分：IO正常结束 和 IO异常结束。

5、访管中断事件的处理

系统调用程序入口表。

8、处理器的两级调度是什么？什么是后备作业？什么是输入进？

作业调度 和进程调度

在批处理操作系统控制下，把若干个用户作业组织成作业流，让它们成批进入	计算机系统，且把它们存放在磁盘上的专用区域中等待处理。通过作业调度从	输入井中选取后备作业装入主存，然后通过进程调度选取一个进程让它占用处	理器。

输入井 ：在操作系统中，把磁盘上用来存放作业信息的专用区域称 输入井。

后备作业：把在输入井中等待处理的作业称 后备作业。

9、什么是作业调度？必要条件是什么？作业调度算法有哪些？各算法的特点？

作业调度：指 从输入井中 选取后备作业装入主存的工作 称 作业调度。

必要条件是：系统现在有的尚未分配的资源可以满足被选中作业的资源要求。

作业调度算法有：1、先来先服务算法

最简单，先进入的作业优先被挑选，注意：不是先进入的	一定被选中，只有满足必要条件的作业才能被选中。

例子2-2表：

特点：简单，具有一定的公平性，效率低。吞吐能力差。

可能使许多小作业长时间等待；

2、计算时间短的作业优先算法

依据作业在输入井中提出的计算机事件为标准，优先选中计算机短且	资源能得到满足的作业。2-3表

特点：降低了平均周转时间，提高系统的吞吐能力。

可能使计算时间长的作业等待时间过长。

3、响应比高者 优先算法

综合考虑等待时间和计算时间。响应比高者优先装入。

响应比 = 等待时间 / 计算时间

对输入井中 资源能满足的作业计算响应比。

2-4表

4、优先级调度算法

优先级高 且所需资源能满足的作业优先被选取。

5、均衡调度算法

轮流从

不同类的作业中去挑选，

尽可能地使得使用不同资源的作业同	时执行。缩短作业的平均周转时间。

作业调度中选中一个作业且把它装入主存时，就为该作业创建一个用户进程，	若有多个，就创建多个用户进程。初始态 为就绪态。

作业调度 和进程调度 相互配合能实现多道作业的并行执行。2-11图

10、什么是进程调度？进程调度的算法有哪些？

进程调度 ： 从就绪进程中选取一个进程，让它占用处理器的工作 称进程调度。

进程调度算法有：1、先来先服务调度算法

按照进程进入就绪队列的先后次序来选择可占用	处理器的进程。一旦占了处理器，就一直运行下	去，直到完成工作而结束。

2、最高优先级调度算法

让最高优先级的进程使用处理器；

1、非抢占式的，只要一个进程占了处理器运行，直到完成	工作而结束，才让出处理器。

2、抢占式的

严格保证任何时刻让最高优先级的进程在处理器上运行。

3、时间片轮转调度算法

把运行进程一次占用处理器的最长时间 称时间片。

把就绪进程按先后次序排列，总是选择就绪队列中的第一	个进程，让它占用处理器运行，但规定它一次连续占用处	理器的时间不能超过预定的时间片。

分时系统中采用时间片轮转调度算法。

特点：每个用户都感到计算机系统对自己有求必应，单独在使用一台	计算机系统。

11、什么是进程切换？在什么情况下会产生进程切换。

把一个进程让出 处理器 由另一个进程占用处理器的过程 称进程切换。

下面四种均会引起进程切换：

1、从运行状态 变成等待状态。

2、从运行状态变成就绪状态。

3、从等待状态变成就绪状态。

4、完成工作后被撤销。

12、什么是线程？线程与进程有什么区别？线程的属性有哪些？线程的优越性在哪儿？

线程 - 在现代计算机中，把用户的一个计算问题或一个应用问题作为一个进程，	把该进程中可以并发执行的部分 称为 线程。

线程是进程中可以独立执行的子任务。

进程和线程的区别：把进程作为 资源分配单位，而线程是调度和执行单位。

线程的属性：

1、同一进程中的各线程 驻留在该进程的主存地址空间中，且共享该	进程的所有资源；

2、线程在生命周期中 经历状态变化。

3、多个线程可以并发执行。

4、不同的线程可执行相同的程序。

引入线程的意义 或 为何要引入线程 或线程的优越性：

1、减少了进程也就节省了分配 进程控制块 和工作区的开销。

2、建立线程描述表，但不需要另行分配资源，创建速度块。

3、

线程间 的信息传递在同一个主存空

间中，不需要额外的通信机制	，且速度快。

4、线程能独立运行，能充分发挥处理器与外设的并行工作能力。

线程又被称左 轻型进程。

中断是激活操作系统的手段。

不同的进程可以有相同的程序，但 都有各自独立的数据集 和进程控制块。